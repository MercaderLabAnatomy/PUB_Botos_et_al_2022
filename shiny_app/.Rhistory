spectraVariables(mbank)
mtches_df_tmp <- spectraData(mbank[best_match[1]], columns = c("name", "msLevel","rtime", "polarity", "precursorIntensity","compound_class", "formula", "exactmass", "smiles", "inchi", "inchikey",  "link_chembl", "link_chempdb","link_chemspider", "link_comptox", "link_hmdb", "link_kappaview", "link_kegg", "link_knapsack","link_lipidbank", "link_lipidmaps","link_pubchem"))
mtches_df_tmp <- as.data.frame(mtches_df_tmp)
mtches_df <- bind_rows(mtches_df, mtches_df_tmp)
setTxtProgressBar(pb,i)
}
print(mtches_df)
data.table::fwrite(unique(mtches_df), "msms_masbank_spectra_tol_0_5_Antwerp_Univ.csv")
mtches_df <- mtches_df %>% arrange(exactmass) %>% distinct(link_pubchem, .keep_all = TRUE) %>% select(compound_id,name, exactmass,everything()  )
mtches_df <- mtches_df %>% arrange(exactmass) %>% distinct(link_pubchem, .keep_all = TRUE) %>% select(link_pubchem,name, exactmass,everything()  )
data.table::fwrite(unique(mtches_df), "msms_masbank_spectra_tol_0_5_Antwerp_Univ.csv")
View(mtches_df)
mtches_df <- mtches_df %>% arrange(exactmass) %>% distinct(.keep_all = TRUE) %>% select(link_pubchem,name, exactmass,everything()  )
data.table::fwrite(unique(mtches_df), "msms_masbank_spectra_tol_0_5_Antwerp_Univ.csv")
mtches_df %>% unlist(name)
mtches_df %>% unlist(mtches_df$name)
mtches_df %>% unlist(mtches_df$name) %>% class
unlist(mtches_df$name)
apply(mtches_df, 1, FUN =  function(x) {unlist (x$name)
})
save.image("msms_05_predicted_antwerp.RData")
load("msms_05_predicted_antwerp.RData")
library(Spectra)
library(MetaboAnnotation)
library(MetaboCoreUtils)
library(CompoundDb)
library(tidyverse)
tol <- 1
#' Define the m/z ratio for an ion of cystine
sctra_with_match <- numeric()
for(i in seq(100,1200,0.1)){
# for(i in seq(924,925,0.1)){
mz <- i
# print(mz)
# Subset the dataset to MS2 spectra matching the m/z
sps <- filterPrecursorMzValues(sps_all, mz = c(mz), tolerance = tol,ppm=20)
# print(sps)
if (length(sps@backend@spectraData$acquisitionNum)!=0) {
sctra_with_match <- c(sctra_with_match,mz)
}
}
print(sctra_with_match)
peaks_pat <- readxl::read_xlsx("DESI_Mouse/Mass ID list.xlsx")
peaks_pat <- peaks_pat %>% rename(mz_POS="m/z POS")
peaks_pat <- peaks_pat %>% arrange(mz_POS)
peaks_pat$mz_round <- round(peaks_pat$mz_POS, digits = 1)
head(peaks_pat)
View(peaks_pat)
tol <- 0.05
#' Define the m/z ratio for an ion of cystine
sctra_with_match <- numeric()
for(i in seq(100,1200,0.1)){
# for(i in seq(924,925,0.1)){
mz <- i
# print(mz)
# Subset the dataset to MS2 spectra matching the m/z
sps <- filterPrecursorMzValues(sps_all, mz = c(mz), tolerance = tol,ppm=90)
# print(sps)
if (length(sps@backend@spectraData$acquisitionNum)!=0) {
sctra_with_match <- c(sctra_with_match,mz)
}
}
print(sctra_with_match)
# tol <- 0.05
# , tolerance = tol
#' Define the m/z ratio for an ion of cystine
sctra_with_match <- numeric()
for(i in seq(100,1200,0.1)){
# for(i in seq(924,925,0.1)){
mz <- i
# print(mz)
# Subset the dataset to MS2 spectra matching the m/z
sps <- filterPrecursorMzValues(sps_all, mz = c(mz),ppm=20)
# print(sps)
if (length(sps@backend@spectraData$acquisitionNum)!=0) {
sctra_with_match <- c(sctra_with_match,mz)
}
}
print(sctra_with_match)
# tol <- 0.05
# , tolerance = tol
#' Define the m/z ratio for an ion of cystine
sctra_with_match <- numeric()
for(i in seq(100,1200,0.1)){
# for(i in seq(924,925,0.1)){
mz <- i
# print(mz)
# Subset the dataset to MS2 spectra matching the m/z
sps <- filterPrecursorMzValues(sps_all, mz = c(mz),ppm=100)
# print(sps)
if (length(sps@backend@spectraData$acquisitionNum)!=0) {
sctra_with_match <- c(sctra_with_match,mz)
}
}
print(sctra_with_match)
# tol <- 0.05
, tolerance = tol
# tol <- 0.05
# , tolerance = tol
#' Define the m/z ratio for an ion of cystine
sctra_with_match <- numeric()
for(i in seq(100,1200,0.1)){
# for(i in seq(924,925,0.1)){
mz <- i
# print(mz)
# Subset the dataset to MS2 spectra matching the m/z
sps <- filterPrecursorMzValues(sps_all, mz = c(mz),ppm=100, tolerance = tol)
# print(sps)
if (length(sps@backend@spectraData$acquisitionNum)!=0) {
sctra_with_match <- c(sctra_with_match,mz)
}
}
print(sctra_with_match)
tol <- 0.0150
# , tolerance = tol
#' Define the m/z ratio for an ion of cystine
sctra_with_match <- numeric()
for(i in seq(100,1200,0.1)){
# for(i in seq(924,925,0.1)){
mz <- i
# print(mz)
# Subset the dataset to MS2 spectra matching the m/z
sps <- filterPrecursorMzValues(sps_all, mz = c(mz),ppm=20, tolerance = tol)
# print(sps)
if (length(sps@backend@spectraData$acquisitionNum)!=0) {
sctra_with_match <- c(sctra_with_match,mz)
}
}
print(sctra_with_match)
tol <- 1
# , tolerance = tol
#' Define the m/z ratio for an ion of cystine
sctra_with_match <- numeric()
for(i in seq(100,1200,0.1)){
# for(i in seq(924,925,0.1)){
mz <- i
# print(mz)
# Subset the dataset to MS2 spectra matching the m/z
sps <- filterPrecursorMzValues(sps_all, mz = c(mz),ppm=20, tolerance = tol)
# print(sps)
if (length(sps@backend@spectraData$acquisitionNum)!=0) {
sctra_with_match <- c(sctra_with_match,mz)
}
}
print(sctra_with_match)
sps_all$rtime |> head()
sps_all$rtime |> tail()
sps_all$mz |> tail()
sps_all[1]$mz |> tail()
sps_all[2]$mz |> tail()
sps_all[3]$mz |> tail()
3
sps_all[4]$mz |> tail()
sps_all[5]$mz |> tail()
sps_all[5]$mz |> tail()
sps_all[6]$mz |> tail()
sps_all[[6]]$mz |> tail()
sps_all$mz |> tail()
View(sps_all)
peaks_pat <- readxl::read_xlsx("DESI_Mouse/Mass ID list.xlsx")
peaks_pat <- peaks_pat %>% rename(mz_POS="m/z POS")
peaks_pat <- peaks_pat %>% arrange(mz_POS)
peaks_pat$mz_round <- round(peaks_pat$mz_POS, digits = 1)
head(peaks_pat)
tol <- 1
# , tolerance = tol
#' Define the m/z ratio for an ion of cystine
sctra_with_match <- numeric()
for(i in seq(100,1200,0.1)){
# for(i in seq(924,925,0.1)){
mz <- i
# print(mz)
# Subset the dataset to MS2 spectra matching the m/z
sps <- filterPrecursorMzValues(sps_all, mz = c(mz),ppm=50, tolerance = tol)
# print(sps)
if (length(sps@backend@spectraData$acquisitionNum)!=0) {
sctra_with_match <- c(sctra_with_match,mz)
}
}
print(sctra_with_match)
peaks_metab <- data.table::fread("matched_iso_peaks_only_iso_peaks_ppm01_adducts_tol0_5_snr1_5_noref_mad.csv")
peaks_metab$mz_adduct_round <- round(peaks_metab$mz_adduct, digits = 1)
peaks_metab$target_exactmass_round <- round(peaks_metab$target_exactmass, digits = 1)
head(peaks_metab)
all_mz <- peaks_metab$mz_adduct_round %>% unique %>% sort()
all_mz <- all_mz[!is.na(all_mz)]
head(all_mz)
length(all_mz)
hmdb <- Spectra(cdb)
setwd("/mnt/FAE6C9CAE6C9877B/Nick_metabolomics")
hmdb <- Spectra(cdb)
db_file <- "hmdb_cdb_predicted/CompDb.Hsapiens.HMDB.5.0.sqlite"
cdb <- CompDb(db_file)
cdb
tables(cdb)
hmdb <- Spectra(cdb)
hmdb
hmdb_sub %>% mz %>% length()
View(peaks_pat)
subset_mz <- all_mz[all_mz>848 & all_mz<852]
subset_mz
tol <- 5
mtches_df <- data.frame()
pb = txtProgressBar(min = 0, max = length(subset_mz), initial = 0, style = 3)
# for(i in 1:length(all_mz)){
for(i in 1:length(subset_mz)){
# for(i in 1075:1076){
# mz = all_mz[i]
mz = subset_mz[i]
# mz %>% print
# print(match(mz, all_mz))
sps <- filterPrecursorMzValues(sps_all, mz = mz, tolerance = tol, ppm=100 )
if (length(sps@backend@spectraData$acquisitionNum)==0) {
next
}
sps
#' Plot the first spectrum
# plotSpectra(sps[1])
#' Define a filtering function
low_int <- function(x, ...) {
x > max(x, na.rm = TRUE) * 0.05
}
#' Apply the function to filter the spectra
sps <- filterIntensity(sps, intensity = low_int)
#' Plot the first spectrum after filtering
# plotSpectra(sps[1])
scale_int <- function(x, ...) {
maxint <- max(x[, "intensity"], na.rm = TRUE)
x[, "intensity"] <- 100 * x[, "intensity"] / maxint
x
}
#' *Apply* the function to the data
sps <- addProcessing(sps, scale_int)
has_mz <- containsMz(hmdb, mz = mz, tolerance = tol)
#' Subset HMDB
hmdb_sub <- hmdb[has_mz]
hmdb_sub %>% head
#' Compare HMDB against experimental spectra
res <- compareSpectra(hmdb_sub, sps, tolerance = tol)
best_match <- which(res == max(res), arr.ind = TRUE)
best_match
## Specifying a function to draw peak labels
# label_fun <- function(x) {
#     format(unlist(mz(x)), digits = 4)
# }
# (plotSpectraMirror(hmdb_sub[best_match[1]], sps[best_match[2]], tolerance = tol,
#                   labels = label_fun, labelPos = 2, labelOffset = 0.2,
#                   labelSrt = -30))
# grid()
mtches_df_tmp <- spectraData(hmdb_sub[best_match[1]], columns = c("compound_id","name", "msLevel","rtime", "polarity", "precursorIntensity", "formula", "exactmass", "smiles", "inchi", "inchikey","original_spectrum_id", "predicted", "synonym"  ))
mtches_df_tmp <- as.data.frame(mtches_df_tmp)
mtches_df <- bind_rows(mtches_df, mtches_df_tmp)
setTxtProgressBar(pb,i)
}
peaksData(sps)[[1L]]
spectraVariables(sps_all)
all_mz <- peaks_metab$mz_adduct %>% unique %>% sort()
all_mz <- all_mz[!is.na(all_mz)]
head(all_mz)
length(all_mz)
subset_mz <- all_mz[all_mz>848 & all_mz<852]
subset_mz
subset_mz <- all_mz[all_mz>900 & all_mz<950]
subset_mz
subset_mz <- all_mz[all_mz>920 & all_mz<926]
subset_mz
tol <- 0.05
ppm=20
mz <- 924.8075
# for(i in 1:length(all_mz)){
# for(i in 1:length(subset_mz)){
# for(i in 1075:1076){
# mz = all_mz[i]
# mz = subset_mz[i]
# mz %>% print
# print(match(mz, all_mz))
sps <- filterPrecursorMzValues(sps_all, mz = mz, tolerance = tol, ppm=ppm )
sps
mz <- subset_mz
# for(i in 1:length(all_mz)){
# for(i in 1:length(subset_mz)){
# for(i in 1075:1076){
# mz = all_mz[i]
# mz = subset_mz[i]
# mz %>% print
# print(match(mz, all_mz))
sps <- filterPrecursorMzValues(sps_all, mz = mz, tolerance = tol, ppm=ppm )
sps
#' Apply the function to filter the spectra
sps <- filterIntensity(sps, intensity = low_int)
scale_int <- function(x, ...) {
maxint <- max(x[, "intensity"], na.rm = TRUE)
x[, "intensity"] <- 100 * x[, "intensity"] / maxint
x
}
scale_int <- function(x, ...) {
maxint <- max(x[, "intensity"], na.rm = TRUE)
x[, "intensity"] <- 100 * x[, "intensity"] / maxint
x
}
#' *Apply* the function to the data
sps <- addProcessing(sps, scale_int)
has_mz <- containsMz(hmdb, mz = mz, tolerance = tol)
has_mz <- containsMz(hmdb, mz = mz, tolerance = tol)
#' Subset HMDB
hmdb_sub <- hmdb[has_mz]
hmdb_sub %>% head
#' Compare HMDB against experimental spectra
res <- compareSpectra(hmdb_sub, sps, tolerance = tol)
#' Compare HMDB against experimental spectra
res <- compareSpectra(hmdb_sub, sps, tolerance = tol)
best_match <- which(res == max(res), arr.ind = TRUE)
best_match
subset_mz <- all_mz[all_mz>800 & all_mz<820]
subset_mz
mz <- 800.5953
# for(i in 1:length(all_mz)){
# for(i in 1:length(subset_mz)){
# for(i in 1075:1076){
# mz = all_mz[i]
# mz = subset_mz[i]
# mz %>% print
# print(match(mz, all_mz))
sps <- filterPrecursorMzValues(sps_all, mz = mz, tolerance = tol, ppm=ppm )
if (length(sps@backend@spectraData$acquisitionNum)==0) {
next
}
sps
mz <- 800.6164
# for(i in 1:length(all_mz)){
# for(i in 1:length(subset_mz)){
# for(i in 1075:1076){
# mz = all_mz[i]
# mz = subset_mz[i]
# mz %>% print
# print(match(mz, all_mz))
sps <- filterPrecursorMzValues(sps_all, mz = mz, tolerance = tol, ppm=ppm )
if (length(sps@backend@spectraData$acquisitionNum)==0) {
next
}
sps
mz <- 800.7
# for(i in 1:length(all_mz)){
# for(i in 1:length(subset_mz)){
# for(i in 1075:1076){
# mz = all_mz[i]
# mz = subset_mz[i]
# mz %>% print
# print(match(mz, all_mz))
sps <- filterPrecursorMzValues(sps_all, mz = mz, tolerance = tol, ppm=ppm )
sps
mz <- 496
# for(i in 1:length(all_mz)){
# for(i in 1:length(subset_mz)){
# for(i in 1075:1076){
# mz = all_mz[i]
# mz = subset_mz[i]
# mz %>% print
# print(match(mz, all_mz))
sps <- filterPrecursorMzValues(sps_all, mz = mz, tolerance = tol, ppm=ppm )
if (length(sps@backend@spectraData$acquisitionNum)==0) {
next
}
sps
mz <- 496
# for(i in 1:length(all_mz)){
# for(i in 1:length(subset_mz)){
# for(i in 1075:1076){
# mz = all_mz[i]
# mz = subset_mz[i]
# mz %>% print
# print(match(mz, all_mz))
sps <- filterPrecursorMzValues(sps_all, mz = mz, tolerance = tol, ppm=ppm )
sps
mz <- 800.6
# for(i in 1:length(all_mz)){
# for(i in 1:length(subset_mz)){
# for(i in 1075:1076){
# mz = all_mz[i]
# mz = subset_mz[i]
# mz %>% print
# print(match(mz, all_mz))
sps <- filterPrecursorMzValues(sps_all, mz = mz, tolerance = tol, ppm=ppm )
if (length(sps@backend@spectraData$acquisitionNum)==0) {
next
}
sps
# for(i in 1:length(all_mz)){
# for(i in 1:length(subset_mz)){
# for(i in 1075:1076){
# mz = all_mz[i]
# mz = subset_mz[i]
# mz %>% print
# print(match(mz, all_mz))
sps <- filterPrecursorMzValues(sps_all, mz = mz, tolerance = tol, ppm=ppm )
if (length(sps@backend@spectraData$acquisitionNum)==0) {
next
}
sps
#' Plot the first spectrum
# plotSpectra(sps[1])
#' Define a filtering function
low_int <- function(x, ...) {
x > max(x, na.rm = TRUE) * 0.05
}
#' Apply the function to filter the spectra
sps <- filterIntensity(sps, intensity = low_int)
#' Plot the first spectrum after filtering
# plotSpectra(sps[1])
scale_int <- function(x, ...) {
maxint <- max(x[, "intensity"], na.rm = TRUE)
x[, "intensity"] <- 100 * x[, "intensity"] / maxint
x
}
scale_int <- function(x, ...) {
maxint <- max(x[, "intensity"], na.rm = TRUE)
x[, "intensity"] <- 100 * x[, "intensity"] / maxint
x
}
#' *Apply* the function to the data
sps <- addProcessing(sps, scale_int)
has_mz <- containsMz(hmdb, mz = mz, tolerance = tol)
has_mz <- containsMz(hmdb, mz = mz, tolerance = tol)
best_match <- which(res == max(res), arr.ind = TRUE)
best_match
rm(list=ls())
gc()
setwd("/mnt/FAE6C9CAE6C9877B/Nick_metabolomics")
library(Spectra)
library(MetaboAnnotation)
library(MetaboCoreUtils)
library(CompoundDb)
library(tidyverse)
load("msms_05_predicted_antwerp.RData")
setwd("/mnt/FAE6C9CAE6C9877B/Nick_metabolomics")
db_file <- "hmdb_cdb_predicted/CompDb.Hsapiens.HMDB.5.0.sqlite"
cdb <- CompDb(db_file)
cdb
tables(cdb)
BiocManager::install("AnnotationHub", force = TRUE)
install.packages(c("BH", "broom", "colorspace", "fansi", "fontawesome", "fs", "hdf5r", "knitr", "lubridate", "pbkrtest", "pins", "Rcpp", "RcppTOML", "rmarkdown", "sass", "sp", "spatstat.geom", "spatstat.random", "tidyr", "TSP", "vctrs", "vroom", "yaml"))
install.packages(c("class", "MASS", "spatial"), lib="/usr/lib/R/library")
sessionInfo()
install.packages(c("class", "MASS", "spatial"), lib = "/usr/lib/R/library")
sessioninfo()
sessionInfo()
library(BiocManager)
BiocManager::install(version = "3.16")
mzml_fls <- list.files(path = "DESI_Mouse/MSMS_mzml/", pattern="*.mzML")
mzml_fls <- paste0("DESI_Mouse/MSMS_mzml/", mzml_fls)
head(mzml_fls)
sps_all <- Spectra(mzml_fls, source = MsBackendMzR())
sps_all <- Spectra(mzml_fls)
BiocInstaller::install("mzR")
BiocManager::::install("mzR")
BiocManager::install("mzR")
BiocManager::install("mzR")
BiocManager::install("mzR", force = TRUE)
sps_all <- Spectra(mzml_fls, source = MsBackendMzR())
library(Spectra)
library(MetaboAnnotation)
library(MetaboCoreUtils)
library(CompoundDb)
library(tidyverse)
setwd("/mnt/FAE6C9CAE6C9877B/Nick_metabolomics")
getwd()
# Locate the file
# hmdb_file <- "./hmdb_sdf/structures.sdf"
# ## Extract the data
# cmps <- compound_tbl_sdf(hmdb_file)
db_file <- "hmdb_cdb_predicted/CompDb.Hsapiens.HMDB.5.0.sqlite"
cdb <- CompDb(db_file)
cdb
tables(cdb)
mzml_fls <- list.files(path = "DESI_Mouse/MSMS_mzml/", pattern="*.mzML")
mzml_fls <- paste0("DESI_Mouse/MSMS_mzml/", mzml_fls)
head(mzml_fls)
sps_all <- Spectra(mzml_fls, source = MsBackendMzR())
sps_all
spectraVariables(sps_all)
library(AnnotationHub)
ah = AnnotationHub()
ah
unique(ah$dataprovider)
unique(ah$dataprovider)
> query(ah, "MassBank")
unique(ah$dataprovider)
query(ah, "MassBank")
mbank <- MassBankSource("2022.06")
mbank
res <- matchSpectra(
all_mz[1], mbank,
param = CompareSpectraParam(requirePrecursor = TRUE, ppm = 20, tol=0.1))
res <- matchSpectra(
all_mz[1], mbank,
param = CompareSpectraParam(requirePrecursor = TRUE, ppm = 20))
res <- matchSpectra(
sps_all[1], mbank,
param = CompareSpectraParam(requirePrecursor = TRUE, ppm = 20))
res
res <- matchSpectra(
sps_all, mbank,
param = CompareSpectraParam(requirePrecursor = TRUE, ppm = 20))
res
res <- matchSpectra(
sps_all, mbank,
param = CompareSpectraParam(requirePrecursor = FALSE, ppm = 20))
res
library(shiny); runApp('/mnt/FAE6C9CAE6C9877B/Marius_Analysis_2022_Injury_Models/PUB_Botos_et_al_2022-main/shiny_app/DashWebShinyInjuries_plotly.R')
library(shiny); runApp('/mnt/FAE6C9CAE6C9877B/Marius_Analysis_2022_Injury_Models/PUB_Botos_et_al_2022-main (1)/shiny_app/DashWebShinyInjuries_plotly _review_1.R')
runApp('/mnt/FAE6C9CAE6C9877B/Marius_Analysis_2022_Injury_Models/PUB_Botos_et_al_2022-main (1)/shiny_app/DashWebShinyInjuries_plotly _review_1.R')
library(shiny); runApp('/mnt/FAE6C9CAE6C9877B/Marius_Analysis_2022_Injury_Models/PUB_Botos_et_al_2022-main (1)/shiny_app/DashWebShinyInjuries_plotly _review_1.R')
